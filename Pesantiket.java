
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Random;
import javax.swing.table.DefaultTableModel;



/**
 *
 * @author ACER
 */
public class Pesantiket extends javax.swing.JFrame {
    // Buat struktur data untuk menyimpan informasi pemesanan
    private final Object[] bookingData = new Object[8]; // terdapat 8 kolom pada tabel

    // ...
private String generateBookingCode() {
    // Mendapatkan waktu saat ini sebagai bagian dari kode pemesanan
    long timestamp = System.currentTimeMillis();

    // Menambahkan nomor acak untuk membuat kode pemesanan unik
    Random random = new Random();
    int randomSuffix = random.nextInt(1000); // Ubah 1000 sesuai dengan kebutuhan Anda

    // Membentuk kode pemesanan dengan format yang diinginkan
    String bookingCode = "BOOK" + timestamp + randomSuffix;

    return bookingCode;
}
    /**
     * Creates new form Pesantiket
     */
    public Pesantiket() {
        initComponents();
   
        SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy"); // Ganti format sesuai keinginan Anda
TFdate.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(dateFormat)));
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        TFnama = new javax.swing.JTextField();
        TFnik = new javax.swing.JTextField();
        TFhp = new javax.swing.JTextField();
        CBrute = new javax.swing.JComboBox<>();
        CBpesawat = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        TFharga = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TBhasil = new javax.swing.JTable();
        BTcetak = new javax.swing.JButton();
        BTdelete = new javax.swing.JButton();
        BTedit = new javax.swing.JButton();
        BTexit = new javax.swing.JButton();
        BTsubmit = new javax.swing.JButton();
        BTcancel = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        TFdate = new javax.swing.JFormattedTextField();
        jLabel9 = new javax.swing.JLabel();
        TFbooking = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setFont(new java.awt.Font("Calibri Light", 1, 36)); // NOI18N
        jLabel1.setText("PEMESANAN TIKET PESAWAT");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(148, 148, 148)
                .addComponent(jLabel1)
                .addContainerGap(540, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1)
        );

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));

        jLabel2.setText("Nama :");

        jLabel3.setText("NIK :");

        jLabel4.setText("No HP :");

        jLabel5.setText("Rute :");

        jLabel6.setText("Pesawat :");

        CBrute.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pilih rute Anda", "Banjarmasin (BDJ) - Jakarta (CGK)", "Banjarmasin (BDJ) - Denpasar (DPS)", "Banjarmasin (BDJ) - Surabaya (SUB)", "Banjarmasin (BDJ) - Yogyakarta (YIA)", "Banjarmasin (BDJ) - Semarang (SRG)" }));
        CBrute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBruteActionPerformed(evt);
            }
        });

        CBpesawat.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pilih pesawat Anda", "Lion Air", "Batik Air", "Citilink" }));

        jLabel7.setText("Harga");

        TFharga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TFhargaActionPerformed(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(204, 255, 204));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 255, 255)));

        TBhasil.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nama", "NIK", "No HP", "Rute", "Pesawat", "Date", "Harga", "Code Booking"
            }
        ));
        jScrollPane2.setViewportView(TBhasil);

        BTcetak.setText("Cetak");
        BTcetak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTcetakActionPerformed(evt);
            }
        });

        BTdelete.setText("Delete");
        BTdelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTdeleteActionPerformed(evt);
            }
        });

        BTedit.setText("Edit");
        BTedit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTeditActionPerformed(evt);
            }
        });

        BTexit.setText("Exit");
        BTexit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTexitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1158, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BTexit, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(BTcetak)
                .addGap(18, 18, 18)
                .addComponent(BTdelete)
                .addGap(18, 18, 18)
                .addComponent(BTedit, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(BTcetak)
                            .addComponent(BTdelete)
                            .addComponent(BTedit))
                        .addContainerGap(193, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(BTexit))))
        );

        BTsubmit.setText("Submit");
        BTsubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTsubmitActionPerformed(evt);
            }
        });

        BTcancel.setText("Cancel");
        BTcancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTcancelActionPerformed(evt);
            }
        });

        jLabel8.setText("Date :");

        TFdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TFdateActionPerformed(evt);
            }
        });

        jLabel9.setText("Code Booking");

        TFbooking.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TFbookingActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(31, 31, 31)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(TFnik, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TFnama, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 310, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(199, 199, 199)
                                .addComponent(jLabel7)
                                .addGap(112, 112, 112))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(TFbooking, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(77, 77, 77)
                                        .addComponent(TFharga, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(BTsubmit)
                                        .addGap(18, 18, 18)
                                        .addComponent(BTcancel)))
                                .addGap(46, 46, 46))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(CBpesawat, javax.swing.GroupLayout.PREFERRED_SIZE, 411, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(CBrute, javax.swing.GroupLayout.PREFERRED_SIZE, 411, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(TFdate, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(TFhp, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(TFnama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jLabel9))
                        .addGap(3, 3, 3)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(TFnik, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TFharga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TFbooking, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(TFhp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(CBrute, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(CBpesawat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BTsubmit)
                    .addComponent(BTcancel))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(TFdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TFhargaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TFhargaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TFhargaActionPerformed

    private void TFdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TFdateActionPerformed
      
    }//GEN-LAST:event_TFdateActionPerformed

    private void CBruteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBruteActionPerformed
     System.out.println("CBruteActionPerformed is running");
     // Mendapatkan rute yang dipilih
    String selectedRoute = CBrute.getSelectedItem().toString();

   switch (selectedRoute) {
    case "Banjarmasin (BDJ) - Jakarta (CGK)":
        TFharga.setText("IDR 1.000.000");
        break;
    case "Banjarmasin (BDJ) - Denpasar (DPS)":
        TFharga.setText("IDR 900.000");
        break;
    case "Banjarmasin (BDJ) - Surabaya (SUB)":
        TFharga.setText("IDR 1.100.000");
        break;
    case "Banjarmasin (BDJ) - Yogyakarta (YIA)":
        TFharga.setText("IDR 1.200.000");
        break;
    case "Banjarmasin (BDJ) - Semarang (SRG)":
        TFharga.setText("IDR 1.150.000");
        break;
    default:
        // Handle jika rute tidak ditemukan
        TFharga.setText("");
        break;
}
    }//GEN-LAST:event_CBruteActionPerformed

    private void TFbookingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TFbookingActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TFbookingActionPerformed

    private void BTsubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTsubmitActionPerformed
String selectedRoute = CBrute.getSelectedItem().toString();
        switch (selectedRoute) {
    case "Banjarmasin (BDJ) - Jakarta (CGK)":
        TFharga.setText("IDR 1.000.000");
        break;
    case "Banjarmasin (BDJ) - Denpasar (DPS)":
        TFharga.setText("IDR 900.000");
        break;
    case "Banjarmasin (BDJ) - Surabaya (SUB)":
        TFharga.setText("IDR 1.100.000");
        break;
    case "Banjarmasin (BDJ) - Yogyakarta (YIA)":
        TFharga.setText("IDR 1.200.000");
        break;
    case "Banjarmasin (BDJ) - Semarang (SRG)":
        TFharga.setText("IDR 1.150.000");
        break;
    default:
        // Handle jika rute tidak ditemukan
        TFharga.setText("");
        break;    
        }
        TFbooking.setText(generateBookingCode());
        // Dapatkan nilai dari bidang input
        String nama = TFnama.getText();
        String nik = TFnik.getText();
        String hp = TFhp.getText();
        String rute = CBrute.getSelectedItem().toString();
        String pesawat = CBpesawat.getSelectedItem().toString();
        String date = TFdate.getText(); // Sesuaikan ini berdasarkan format tanggal Anda
        String harga = TFharga.getText();
        String bookingCode = TFbooking.getText();


        
        // Simpan nilai ke dalam struktur data
        bookingData[0] = nama;
        bookingData[1] = nik;
        bookingData[2] = hp;
        bookingData[3] = rute;
        bookingData[4] = pesawat;
        bookingData[5] = date;
        bookingData[6] = harga;
        bookingData[7] = bookingCode;

        // Perbarui model tabel dengan data baru
        DefaultTableModel model = (DefaultTableModel) TBhasil.getModel();
        model.addRow(bookingData);

        // Refresh tabel untuk mencerminkan perubahan
        TBhasil.setModel(model);

        // Bersihkan bidang input atau lakukan tindakan tambahan jika diperlukan
        TFnama.setText("");
        TFnik.setText("");
        TFhp.setText("");
        CBrute.setSelectedIndex(0);
        CBpesawat.setSelectedIndex(0);
        TFdate.setValue(null);
        TFharga.setText("");
        TFbooking.setText("");

        
    }//GEN-LAST:event_BTsubmitActionPerformed

    private void BTexitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTexitActionPerformed
    // Menampilkan dialog konfirmasi sebelum keluar
    int option;
    option = javax.swing.JOptionPane.showConfirmDialog(this, "Apakah Anda yakin ingin keluar?", "Konfirmasi", javax.swing.JOptionPane.YES_NO_OPTION);
    
    // Jika pengguna memilih 'Yes', keluar dari aplikasi
    if (option == javax.swing.JOptionPane.YES_OPTION) {
        System.exit(0);
    }
    }//GEN-LAST:event_BTexitActionPerformed

    private void BTcancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTcancelActionPerformed
        // Menghapus atau membersihkan input
    TFnama.setText("");
    TFnik.setText("");
    TFhp.setText("");
    CBrute.setSelectedIndex(0); // Memilih kembali opsi pertama di JComboBox
    CBpesawat.setSelectedIndex(0); // Memilih kembali opsi pertama di JComboBox
    TFdate.setValue(null); // Menghapus nilai dari formatted text field

    // Menetapkan nilai kosong untuk harga
    TFharga.setText("");

    // Fokus kembali ke input nama
    TFnama.requestFocus();
    }//GEN-LAST:event_BTcancelActionPerformed

    private void BTdeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTdeleteActionPerformed
     // Dapatkan indeks baris yang dipilih
    int selectedRow = TBhasil.getSelectedRow();

    // Periksa apakah ada baris yang dipilih
    if (selectedRow == -1) {
        javax.swing.JOptionPane.showMessageDialog(this, "Pilih baris yang ingin dihapus.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Konfirmasi pengguna sebelum menghapus
    int option = javax.swing.JOptionPane.showConfirmDialog(this, "Apakah Anda yakin ingin menghapus baris ini?", "Konfirmasi", javax.swing.JOptionPane.YES_NO_OPTION);

    // Hapus baris jika pengguna menekan 'Yes'
    if (option == javax.swing.JOptionPane.YES_OPTION) {
        // Dapatkan model tabel
        DefaultTableModel model = (DefaultTableModel) TBhasil.getModel();

        // Hapus baris yang dipilih
        model.removeRow(selectedRow);

        // Optional: Tambahkan tindakan tambahan setelah menghapus, jika diperlukan
    }
    }//GEN-LAST:event_BTdeleteActionPerformed

    private void BTeditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTeditActionPerformed
       // Dapatkan indeks baris yang dipilih
    int selectedRow = TBhasil.getSelectedRow();

    // Periksa apakah ada baris yang dipilih
    if (selectedRow == -1) {
        javax.swing.JOptionPane.showMessageDialog(this, "Pilih baris yang ingin diedit.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Dapatkan model tabel
    DefaultTableModel model = (DefaultTableModel) TBhasil.getModel();

    // Dapatkan nilai kolom dari baris yang dipilih
    String nama = (String) model.getValueAt(selectedRow, 0);
    String nik = (String) model.getValueAt(selectedRow, 1);
    String hp = (String) model.getValueAt(selectedRow, 2);
    String rute = (String) model.getValueAt(selectedRow, 3);
    String pesawat = (String) model.getValueAt(selectedRow, 4);
    String date = (String) model.getValueAt(selectedRow, 5);
    String harga = (String) model.getValueAt(selectedRow, 6);
    String bookingCode = (String) model.getValueAt(selectedRow, 7);

    // Menetapkan nilai ke bidang input sesuai dengan nilai yang dipilih
    TFnama.setText(nama);
    TFnik.setText(nik);
    TFhp.setText(hp);
    CBrute.setSelectedItem(rute);
    CBpesawat.setSelectedItem(pesawat);
    TFdate.setText(date);
    TFharga.setText(harga);
    TFbooking.setText(bookingCode);

    // Hapus baris yang dipilih dari tabel
    model.removeRow(selectedRow);

    }//GEN-LAST:event_BTeditActionPerformed

    private void BTcetakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTcetakActionPerformed
    saveAllDataToDatabase();
    }//GEN-LAST:event_BTcetakActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Pesantiket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Pesantiket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Pesantiket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Pesantiket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Pesantiket().setVisible(true);
            }
        });
    }
DefaultTableModel tableModel;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BTcancel;
    private javax.swing.JButton BTcetak;
    private javax.swing.JButton BTdelete;
    private javax.swing.JButton BTedit;
    private javax.swing.JButton BTexit;
    private javax.swing.JButton BTsubmit;
    private javax.swing.JComboBox<String> CBpesawat;
    private javax.swing.JComboBox<String> CBrute;
    private javax.swing.JTable TBhasil;
    private javax.swing.JTextField TFbooking;
    private javax.swing.JFormattedTextField TFdate;
    private javax.swing.JTextField TFharga;
    private javax.swing.JTextField TFhp;
    private javax.swing.JTextField TFnama;
    private javax.swing.JTextField TFnik;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables

    private void saveAllDataToDatabase() {
    DefaultTableModel model = (DefaultTableModel) TBhasil.getModel();

    for (int i = 0; i < model.getRowCount(); i++) {
        String nama = (String) model.getValueAt(i, 0);
        String nik = (String) model.getValueAt(i, 1);
        String hp = (String) model.getValueAt(i, 2);
        String rute = (String) model.getValueAt(i, 3);
        String pesawat = (String) model.getValueAt(i, 4);
        String date = (String) model.getValueAt(i, 5);
        String harga = (String) model.getValueAt(i, 6);
        String bookingCode = (String) model.getValueAt(i, 7);

        // Panggil metode simpan data ke database yang telah Anda buat sebelumnya
        saveDataToDatabase(nama, nik, hp, rute, pesawat, date, harga, bookingCode);
    }

    javax.swing.JOptionPane.showMessageDialog(this, "Semua data berhasil disimpan ke database.", "Sukses", javax.swing.JOptionPane.INFORMATION_MESSAGE);
}

    private void saveDataToDatabase(String nama, String nik, String hp, String rute, String pesawat, String date, String harga, String bookingCode) {
     try {
        Connection connection = Koneksi.configDB();
        String sql = "INSERT INTO tabel_input (nama, nik, hp, rute, pesawat, date, harga, booking_code) VALUES (?, ?, ?, ?, ?, ?, ?, ?)";
        try (PreparedStatement preparedStatement = connection.prepareStatement(sql)) {
            preparedStatement.setString(1, nama);
            preparedStatement.setString(2, nik);
            preparedStatement.setString(3, hp);
            preparedStatement.setString(4, rute);
            preparedStatement.setString(5, pesawat);
            preparedStatement.setString(6, date);
            preparedStatement.setString(7, harga);
            preparedStatement.setString(8, bookingCode);

            preparedStatement.executeUpdate();
        }
    } catch (SQLException e) {
        javax.swing.JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat menyimpan data ke database. Pesan kesalahan: " + e.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
    }    
    }

}
